<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd ">

   
	<mvc:annotation-driven />

	<context:component-scan base-package="eu.interopehrate.r2d.ehr" />
	
	<!--  bean that acts as proxy server for internal or external service -->
	<bean name="ehrService" class="eu.interopehrate.r2d.ehr.services.RestEHRService" scope="prototype" />	
	<bean name="ihsService" class="eu.interopehrate.r2d.ehr.services.RestIHSService" scope="prototype" />	
	<bean name="r2dAccessService" class="eu.interopehrate.r2d.ehr.services.RestR2DAccessService" scope="prototype" />	
	<bean name="localConversionService" class="eu.interopehrate.r2d.ehr.services.LocalConversionService" scope="prototype" />	

	<!-- Bean for local conversion -->
	<bean name="cdaEncounterListConverter" class="eu.interopehrate.r2d.ehr.converter.cda.CDAEncounterListConverter" scope="prototype" />	
	
	<!-- Bean providing concrete HTTP transport layer -->
	<bean name="httpInvoker" class="eu.interopehrate.r2d.ehr.services.ApacheHttpInvoker" scope="prototype" />
	
	<!-- bean for workflow execution -->
	<bean name="requestController" class="eu.interopehrate.r2d.ehr.workflow.EHRRequestController" scope="singleton" />
	<bean name="AuthorizeCitizenToEHR" class="eu.interopehrate.r2d.ehr.workflow.AuthorizeCitizenToEHR" scope="prototype" />
	<bean name="RequestToEHRWork" class="eu.interopehrate.r2d.ehr.workflow.RequestToEHRWork" scope="prototype" />
	<bean name="RequestConversionWork" class="eu.interopehrate.r2d.ehr.workflow.RequestConversionWork" scope="prototype" />
	<bean name="SendFailureToR2DWork" class="eu.interopehrate.r2d.ehr.workflow.SendFailureToR2DWork" scope="prototype" />
	<bean name="SendSuccessToR2DWork" class="eu.interopehrate.r2d.ehr.workflow.SendSuccessToR2DWork" scope="prototype" />
		
	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>
		
</beans>